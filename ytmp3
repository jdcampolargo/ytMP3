#!/usr/bin/env bash
set -euo pipefail
# ytmp3: MP3 -> MP4 (black card), centered title and optional subtitle
# Usage: ytmp3 <audio.mp3> <title> [subtitle] [out.mp4]

audio="${1:-}"; title="${2:-}"; subtitle="${3:-}"; out="${4:-}"

if [[ -z "${audio}" || -z "${title}" ]]; then
  echo "Usage: ytmp3 <audio.mp3> <title> [subtitle] [out.mp4]" >&2
  exit 2
fi
if [[ ! -f "${audio}" ]]; then
  echo "Audio not found: ${audio}" >&2
  exit 1
fi

# Tweaks via env (optional)
SIZE="${YTMP3_SIZE:-1920x1080}"
FPS="${YTMP3_FPS:-30}"
BG="${YTMP3_BG:-black}"

# Font (override with YTMP3_FONT)
if [[ -n "${YTMP3_FONT:-}" ]]; then
  FONT="${YTMP3_FONT}"
else
  FONT="/Library/Fonts/Arial.ttf"
  [[ -f "$FONT" ]] || FONT="/System/Library/Fonts/Supplemental/Arial.ttf"
  [[ -f "$FONT" ]] || FONT="/System/Library/Fonts/Helvetica.ttc"
  [[ -f "$FONT" ]] || FONT="/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf"
fi
if [[ ! -f "$FONT" ]]; then
  echo "Couldn't find a font file. Set YTMP3_FONT=/path/to/font.ttf" >&2
  exit 1
fi

tmpdir="$(mktemp -d)"
trap 'rm -rf "$tmpdir"' EXIT

printf "%s" "$title" > "$tmpdir/title.txt"
[[ -n "${subtitle}" ]] && printf "%s" "$subtitle" > "$tmpdir/subtitle.txt"

bg="$tmpdir/bg.png"
if [[ -n "${subtitle}" ]]; then
  vf="drawtext=fontfile=$FONT:textfile=$tmpdir/title.txt:fontcolor=white:fontsize=72:x=(w-text_w)/2:y=(h/2-60),drawtext=fontfile=$FONT:textfile=$tmpdir/subtitle.txt:fontcolor=white:fontsize=42:x=(w-text_w)/2:y=(h/2+20)"
else
  vf="drawtext=fontfile=$FONT:textfile=$tmpdir/title.txt:fontcolor=white:fontsize=72:x=(w-text_w)/2:y=(h-text_h)/2"
fi

# Render one PNG (avoid drawtext per-frame work)
ffmpeg -hide_banner -loglevel error -y \
  -f lavfi -i "color=c=${BG}:s=${SIZE}" -frames:v 1 \
  -vf "$vf" "$bg"

# Default output name if not provided
if [[ -z "${out}" ]]; then
  safe_title="$(printf '%s' "$title" | tr ' /:' '___')"
  out="${safe_title}.mp4"
fi

# Encode: VideoToolbox (Mac) if present; else ultrafast x264
if ffmpeg -hide_banner -encoders 2>/dev/null | grep -q 'h264_videotoolbox'; then
  ffmpeg -hide_banner -y -loop 1 -framerate "${FPS}" -i "$bg" -i "$audio" \
    -map 0:v -map 1:a \
    -c:v h264_videotoolbox -b:v 2000k -maxrate 3000k -bufsize 6000k -g $((FPS*10)) -pix_fmt yuv420p \
    -c:a aac -b:a 192k -shortest -movflags +faststart "$out"
else
  ffmpeg -hide_banner -y -loop 1 -framerate "${FPS}" -i "$bg" -i "$audio" \
    -map 0:v -map 1:a \
    -c:v libx264 -preset ultrafast -tune stillimage -crf 20 -threads 0 -g $((FPS*10)) -pix_fmt yuv420p \
    -c:a aac -b:a 192k -shortest -movflags +faststart "$out"
fi

echo "âœ… Created: $out"
